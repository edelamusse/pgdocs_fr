<?xml version="1.0" encoding="UTF-8"?>
<!-- doc/src/sgml/ref/pgupgrade.sgml -->

<refentry id="pgupgrade">
 <indexterm zone="pgupgrade">
  <primary>pg_upgrade</primary>
 </indexterm>

 <refmeta>
  <refentrytitle><application>pg_upgrade</application></refentrytitle>
  <manvolnum>1</manvolnum>
  <refmiscinfo>Application</refmiscinfo>
 </refmeta>

 <refnamediv>
  <refname>pg_upgrade</refname>
  <refpurpose>met à jour une instance du serveur <productname>PostgreSQL</productname></refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <cmdsynopsis>
   <command>pg_upgrade</command>
   <arg choice="plain"><option>-b</option></arg>
   <arg choice="plain"><replaceable>oldbindir</replaceable></arg>
   <arg choice="plain"><option>-B</option></arg>
   <arg choice="plain"><replaceable>newbindir</replaceable></arg>
   <arg choice="plain"><option>-d</option></arg>
   <arg choice="plain"><replaceable>olddatadir</replaceable></arg>
   <arg choice="plain"><option>-D</option></arg>
   <arg choice="plain"><replaceable>newdatadir</replaceable></arg>
   <arg rep="repeat"><replaceable>option</replaceable></arg>
  </cmdsynopsis>
 </refsynopsisdiv>

 <refsect1>
  <title>Description</title>

 <para>
   <application>pg_upgrade</application> (antérieurement connu
   sous le nom <application>pg_migrator</application>) permet
   de mettre à jour les fichiers de données vers une version
   plus récente de <productname>PostgreSQL</productname> sans la
   sauvegarde et le rechargement de données typiquement requis
   pour les mises à jour d'une version majeure vers une autre,
   par exemple d'une version 8.4.7 à la version majeure courante de
   <productname>PostgreSQL</application>. Il n'est pas nécessaire
   pour les mises à jour mineures, exemple d'une version 9.0.1 à la
   version 9.0.4.
 </para>

 <para>
   Les sorties de version majeures de PostgreSQL ajoutent
   régulièrement de nouvelles fonctionnalités qui changent souvent
   la structure des tables système, mais le format interne des données
   sauvegardées change rarement. <application>pg_upgrade</application>
   utilise ce fait pour effectuer des mises à jour rapides en créant
   de nouvelles tables système et en réutilisant les anciens fichiers
   de données. Si jamais une future version majeure devait modifier le format
   d'enregistrement des données de telle sorte que l'ancien format
   des données soit illisibile, <application>pg_upgrade</application>
   ne pourrait pas être utilisé pour ces mises à jour. (La communauté
   essaiera d'éviter de telles situations.)
 </para>

 <para>
   <application>pg_upgrade</application> fait de son mieux pour être
   sûr que le nouveau et l'ancien cluster soient compatibles au niveau
   binaire, exemple en vérifiant que les options de compilation
   sont compatibles, y compris le format 32/64 bits des binaires. Il
   est également important que les modules externes soient aussi
   compatibles au plan binaire, bien que ceci ne puissent être
   vérifié par <application>pg_upgrade</application>.
 </para>

  <para>
   pg_uppgrade supporte les mises à jour à partir de la version
   8.4.X et suivantes jusqu'à la version majeure courante de
   <productname>PostgreSQL</productname>, y compris les images et
   sorties alpha.
  </para>
 </refsect1>

 <refsect1>
  <title>Options</title>

   <para>
    <application>pg_upgrade</application> accepte les arguments de ligne de commande suivants:

    <variablelist>

     <varlistentry>
      <term><option>-b</option> <replaceable>bindir</replaceable></term>
      <term><option>--old-bindir=</option><replaceable>bindir</replaceable></term>
      <listitem><para>l'ancien répertoire des exécutables PostgreSQL;
              variable d'environnement <envar>PGBINOLD</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-B</option> <replaceable>bindir</replaceable></term>
      <term><option>--new-bindir=</option><replaceable>bindir</replaceable></term>
      <listitem><para>le nouveau répertoire des exécutables PostgreSQL;
      variable d'environnement <envar>PGBINNEW</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-c</option></term>
      <term><option>--check</option></term>
      <listitem><para>uniquement la vérification des clusters, ne
      modifier aucune données</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-d</option> <replaceable>datadir</replaceable></term>
      <term><option>--old-datadir=</option><replaceable>datadir</replaceable></term>
      <listitem><para>répertoire de données de l'ancien cluster;
      variable d'environnement<envar>PGDATAOLD</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-D</option> <replaceable>datadir</replaceable></term>
      <term><option>--new-datadir=</option><replaceable>datadir</replaceable></term>
      <listitem><para>répertoire de données du nouveau cluster;
      variable d'environnement <envar>PGDATANEW</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-j</option></term>
      <term><option>--jobs</option></term>
      <listitem><para>nombres de processus ou threads simultanés à utiliser
      </para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-k</option></term>
      <term><option>--link</option></term>
      <listitem><para>utiliser des liens en dur au lieu de copier les
      fichiers vers le nouveau cluster (utilise des points de jonction
      sur Windows)</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-o</option> <replaceable class="parameter">options</replaceable></term>
      <term><option>--old-options</option> <replaceable class="parameter">options</replaceable></term>
      <listitem><para>options à passer directement à l'ancienne commande
      <command>postgres</command>; les invocations multiples de cette
      option sont cumulées</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-O</option> <replaceable class="parameter">options</replaceable></term>
      <term><option>--new-options</option> <replaceable class="parameter">options</replaceable></term>
      <listitem><para>options à passer directement à la nouvelle
      commande <command>postgres</command>; les invocations multiples
      de cette commande sont cumulées</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-p</option> <replaceable>port</replaceable></term>
      <term><option>--old-port=</option><replaceable>port</replaceable></term>
      <listitem><para>le numéro de port de l'ancien cluster; variable
      d'environnement<envar>PGPORTOLD</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-P</option> <replaceable>port</replaceable></term>
      <term><option>--new-port=</option><replaceable>port</replaceable></term>
      <listitem><para>le numéro de port du nouveau cluster; variable
      d'environnement<envar>PGPORTNEW</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-r</option></term>
      <term><option>--retain</option></term>
      <listitem><para>conserver les fichiers SQL et de traces y compris
      après avoir terminé avec succès</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-U</option> <replaceable>username</replaceable></term>
      <term><option>--username=</option><replaceable>username</replaceable></term>
      <listitem><para>nom d'utilisateur du cluster d'installation;
      variable d'environnement<envar>PGUSER</envar></para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-v</option></term>
      <term><option>--verbose</option></term>
      <listitem><para>activer le traçage interne verbeux</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-V</option></term>
      <term><option>--version</option></term>
      <listitem><para>afficher les informations de version, puis quitter</para></listitem>
     </varlistentry>

     <varlistentry>
      <term><option>-?</option></term>
      <term><option>--help</option></term>
      <listitem><para>  afficher l'aide, puis quitter</para></listitem>
     </varlistentry>

    </variablelist>
   </para>

 </refsect1>

 <refsect1>
  <title>Usage</title>

  <para>
   Ci-dessous les étapes pour effectuer une mise à jour avec
   <application>pg_upgrade</application>:
  </para>

  <procedure>
   <step performance="optional">
    <title>Optionnellement déplacez l'ancien cluster</title>

    <para>
     Si vous utilisez un répertoire d'installation spécifique par
     version, exemple <filename>/opt/PostgreSQL/9.1</filename>, vous
     n'avez pas besoin de déplacer l'ancien cluster. Les installateurs
     graphiques utilisent tous des répertoires d'installation
     spécifiques par version.
    </para>

    <para>
     Si votre répertoire d'installation n'est pas spécifique par
     version, exemple <filename>/usr/local/pgsql</filename>, il est
     nécessaire de déplacer le répertoire d'installation courant de
     PostgreSQL de telle manire qu'il n'interfère pas avec la nouvelle
     installation de <productname>PostgreSQL</productname>. Une fois
     que le serveur courant <productname>PostgreSQL</productname>
     est éteint, il est sans danger de renommer le répertoire
     d'installation de PostgreSQL; en supposant que l'ancien
     répertoire est <filename>/usr/local/pgsql</filename>, vous
     pouvez faire:

<programlisting>
mv /usr/local/pgsql /usr/local/pgsql.old
</programlisting>
     pour renommer le répertoire.
    </para>
   </step>

   <step>
    <title>Pour les installations à partir des sources, construisez la nouvelle version</title>

    <para>
     Construisez la nouvelle version de PostgreSQL à partir des
     sources avec des options de <command>configure</command>
     qui sont compatibles avec l'ancien
     cluster. <application>pg_upgrade</application> utilisera
     <command>pg_controldata</command> pour s'assurer que l'ensemble
     des configurations sont compatibles avant de commencer la mise
     à jour.
    </para>
   </step>

   <step>
    <title>Installez les nouveaux binaires PostgreSQL</title>

    <para>
     Installez les binaires du nouveau serveur et les fichiers
     associés. Par défaut <application>pg_upgrade</application> est
     inclus dans une installation.
    </para>

    <para>
     Pour les installations à partir des sources, si vous souhaitez
     installer le nouveau serveur dans un endroit personnalisé, utilisez
     la variable <literal>prefix</literal>:

<programlisting>
make prefix=/usr/local/pgsql.new install
</programlisting></para>
   </step>

   <step>
    <title>Initialisez le nouveau cluster PostgreSQL</title>

    <para>
     Initialisez le nouveau cluster en utilisant la commande
     <command>initdb</command>. À nouveau, utilisez des options de
     la commande <command>initdb</command> compatibles avec l'ancien
     cluster. Beaucoup d'installateurs pré-construit effectuent cette
     étape automatiquement. Il n'est pas nécessaire de démarrer
     le nouveau cluster.
    </para>
   </step>

   <step>
    <title>Installez les fichiers objets partagés personnalisés</title>

    <para>
     Installez l'ensemble des fichiers objets partagés personnalisés
     (ou DLLs) utilisés par l'ancien cluster dans le nouveau
     cluster, exemple <filename>pgcrypto.so</filename>, qu'ils
     soient tirés de <filename>contrib</filename> ou d'autres
     sources. N'installez pas les définitions des schémas, exemple
     <filename>pgcrypto.sql</filename>, car ceux-ci seront mis à
     jour à partir de l'ancien cluster. Aussi, tous les fichiers de
     recherche plein texte personnalisés (dictionnaires, synonymes,
     thesaurus, termes courants) doivent être copiés vers le
     nouveau cluster.
    </para>
   </step>

   <step>
    <title>Ajuster l'authentification</title>

    <para>
     <command>pg_upgrade</command> se connectera à l'ancien et au
     nouveau serveur plusieurs fois, aussi vous pourriez avoir besoin
     de positionner l'authentification sur <literal>peer</literal>
     ou d'utiliser un fichier <filename>~/.pgpass</filename> (voir
     <xref linkend="libpq-pgpass"/>).
    </para>
   </step>

   <step>
    <title>Arrêtez les deux serveurs</title>

    <para>
     Assurez vous que les deux serveurs sont arrêtés en utilisant,
     sur Unix par exemple:

<programlisting>
pg_ctl -D /opt/PostgreSQL/8.4 stop
pg_ctl -D /opt/PostgreSQL/9.0 stop
</programlisting>

     ou sur Windows, en utilisant les noms de services corrects:

<programlisting>
NET STOP postgresql-8.4
NET STOP postgresql-9.0
</programlisting>
    </para>

    <para>
     Les serveurs standby par réplication en continue et par copie
     des journaux peuvent rester en fonctionnement jusqu'à une étape
     ultérieure.
    </para>
   </step>

   <step>
    <title>Vérifiez les serveurs standby</title>

    <para>
     Si vous êtes en train de mettre à jour des serveurs standby
     par réplication continue ou par copie des journaux, vérifiez
     en utilisant <application>pg_controldata</application> sur
     les anciens clusters primaires et standby que les anciens
     serveurs standby sont à jour. Vérifiez que les valeurs de
     <quote>Latest checkpoint location</quote> correspondent dans
     tous les clusters. (Il n'y aura pas correspondance si les anciens
     serveurs standby sont éteints avant l'ancien serveur primaire.)
    </para>
   </step>

   <step>
    <title>Lancez <application>pg_upgrade</application></title>

    <para>
     Lancez toujours le binaire <application>pg_upgrade</application>
     du nouveau serveur, pas celui de
     l'ancien. <application>pg_upgrade</application> exige la
     spécification des anciens et des nouveaux répertoires de
     données et des exécutables (<filename>bin</filename>). Vous
     pouvez aussi indiquer des valeurs pour les utilisateurs et les
     ports, et si vous voulez que les données soient liées plutôt
     que copiées (par défaut).
    </para>

    <para>
     Si vous utilisez le mode liaison, la mise à jour sera beaucoup
     plus rapide (pas de copie de fichiers) et utilisera moins d'espace
     disque, mais vous ne serez plus en mesure d'accèder à votre
     ancien cluster une fois que le nouveau cluster sera démarré
     après la mise à jour. Le mode liaison exige également que
     le répertoire de données de l'ancien et du nouveau cluster
     soient dans le même système de fichiers. (Les tablespaces et
     <filename>pg_xlog</filename> peuvent être sur des systèmes de
     fichiers différents) Voir <literal>pg_upgrade --help</literal>
     pour une liste d'options complètes.
    </para>

    <para>
     L'option <option>--jobs</option> permet l'utilisation de plusieurs
     cœurs CPU pour copier ou lier des fichiers et pour sauvegarder
     et recharger les schémas des bases de données en parallèle;
     un bon chiffre pour commencer est le maximum du nombre de cœurs
     CPU et des tablespaces. Cette option peut réduire dramatiquement
     le temps pour mettre à jour un serveur avec plusieurs bases de
     données s'exécutant sur une machine multiprocesseur.
    </para>

    <para>
     Pour les utilisateurs Windows, vous devez être connecté avec
     un compte administrateur, et lancer un shell sous l'utilisateur
     <literal>postgres</literal> et positionner le chemin correct:

<programlisting>
RUNAS /USER:postgres "CMD.EXE"
SET PATH=%PATH%;C:\Program Files\PostgreSQL\9.0\bin;
</programlisting>

     puis lancez <application>pg_upgrade</application> avec les
     répertoires entre guillemets, exemple:

<programlisting>
pg_upgrade.exe
        --old-datadir "C:/Program Files/PostgreSQL/8.4/data"
        --new-datadir "C:/Program Files/PostgreSQL/9.0/data"
        --old-bindir "C:/Program Files/PostgreSQL/8.4/bin"
        --new-bindir "C:/Program Files/PostgreSQL/9.0/bin"
</programlisting>

     Une fois démarré, <command>pg_upgrade</command> vérifiera que les 2
     clusters sont compatibles avant d'effectuer la mise à jour. Vous pouvez
     utiliser <command>pg_upgrade --check</command> pour effectuer uniquement
     la vérification, y compris si l'ancien serveur est actuellement en
     fonctionnement. <command>pg_upgrade -- check</command> mettra également
     en évidence les ajustements manuels nécessaires que vous aurez besoin de
     faire après la mise à jour. Si vous désirez utiliser le mode liaison
     vous devriez indiquer l'option <option>--link</option> avec l'option
     <option>--check</option> pour activer les vérifications spécifiques
     au mode liaison. <command>pg_upgrade</command> doit avoir la permission
     d'écriture dans le répertoire courant.
    </para>

    <para>
     Évidemment, personne ne devrait accèder les clusters durant
     la mise à jour. <application>pg_upgrade</application> lance par
     défaut les serveurs sur le port 50432 pour éviter les connections
     non désirées de clients. Vous pouvez utilisez le même  numéro de
     port pour les deux clusters lors d'une mise à jour car l'ancien et
     le nouveau cluster ne fonctionneront pas en même temps. Cependant,
     lors de la vérification d'un ancien serveur en fonctionnement,
     l'ancien et le nouveau numéro de port doivent être différents.
    </para>

    <para>
     Si une erreur survient lors de la restauration du schéma de la
     base de données <command>pg_upgrade</command> quittera et vous
     devrez revenir à l'ancien cluster comme décrit ci-dessous
     à <xref linkend="pgupgrade-step-revert"/>. Pour réessayer
     <command>pg_upgrade</command>, vous aurez besoin de modifier
     l'ancien cluster de telle manière que la restauration du
     schéma par pg_upgrade réussisse. Si le problème est un module
     <filename>contrib</filename>, vous pourriez avoir besoin de
     désinstaller le module <filename>contrib</filename>de l'ancien
     cluster et le réinstaller dans le nouveau cluster après la
     mise à jour, en supposant que le module n'est pas utilisé pour
     stocker des données utilisateur.
    </para>
   </step>

   <step>
    <title>Mettez à jour les serveurs standby par réplication continue
    et copie de journaux</title>

    <para>
     Si vous avez des serveurs standby par réplication continue (voir
     <xref linkend="streaming-replication"/>) ou par copie des journaux
     de transaction (voir <xref linkend="warm-standby"/>), suivez les
     étapes ci-dessous pour les mettre à jour. Vous ne lancerez pas
     <application>pg_upgrade</application> sur les serveurs standby,
     mais plutôt <application>rsync</application>. Ne démarrez
     encore aucun serveurs.
    </para>

    <substeps>

     <step>
      <title>Installez les nouveaux binaires PostgreSQL sur les serveurs standy</title>

      <para>
       Assurez vous que les nouveaux binaires et fichiers de support
       sont installés sur tous les serveurs standby.
      </para>
     </step>

     <step>
         <title>Assurez vous que les nouveaux répertoires de données sur
         les serveurs standby n'existe <emphasis>pas</emphasis></title>

      <para>
       Assurez vous que les nouveaux répertoires de données sur les
       serveurs standby n'existe <emphasis>pas</emphasis> ou sont
       vides. Si <application>initdb</application> a été lancé,
       détruisez les répertoires de données des serveurs standby.
      </para>
     </step>

     <step>
      <title>Installez les fichiers objets partagés personnalisés</title>

      <para>
       Installez les même fichiers objets partagés personnalisés
       sur les nouveaux serveurs standby que vous avez installé sur le
       nouveau cluster maître.
      </para>
     </step>

     <step>
      <title>Arrêtez les serveurs standby</title>

      <para>
       Si les serveurs standby sont encore lancés, arrêtez les
       maintenant en utilisant les instructions ci-dessus.
      </para>
     </step>

     <step>
      <title>Sauvegardez les fichiers de configuration</title>

      <para>
       Sauvegardez tous les fichiers de configuration des
       serveurs standby que vous avez besoin de conserver,
       par exemple <filename>postgresql.conf</filename>,
       <literal>recovery.conf</literal>, dans la mesure où ceux-ci
       seront réécrits ou supprimés dans l'étape suivante.
      </para>
     </step>

     <step>
      <title>Démarrez et stoppez le nouveau cluster maître</title>

      <para>
       Sur le nouveau cluster maître, modifiez
       <varname>wal_level</varname> à <literal>hot_standby</literal>
       dans le fichier <filename>postgresql.conf</filename> puis démarrez
       et arrêtez le cluster.
      </para>
     </step>

     <step>
      <title>Lancez <application>rsync</application></title>

      <para>
       À partir d'un répertoire qui est au-dessus du répertoire de
       l'ancien et du nouveau cluster, lancez ceci pour chaque esclave:

<programlisting>
rsync --archive --delete --hard-links --size-only old_pgdata new_pgdata remote_dir
</programlisting>

       où <option>old_pgdata</option> et <option>new_pgdata</option> sont
       relatifs au répertoire courant, et <option>remote_dir</option> est
       <emphasis>au dessus</emphasis> des ancien et nouveau répertoires
       des clusters sur le serveur standby. Les anciens et nouveaux chemins
       relatifs doivent correspondre sur le serveur maître et le serveur
       standby. Consultez les pages du manuel de <application>rsync</application>
       pour des détails sur la manière de spécifier le répertoire
       distant, exemple <literal>standbyhost:/opt/PostgreSQL</literal>.
       <application>rsync</application> sera rapide lorsque l'option
       <option>--link</option> de <application>pg_upgrade</application> est
       utilisée car il créera des liens en dur sur le serveur distant plutôt
       que de transférer les données utilisateur.
      </para>

      <para>
       Si vous avez des tablespaces, vous aurez besoin de lancer
       une commande <application>rsync</application> similaire pour
       chaque répertoire de tablespace. Si vous avez déplacé
       <filename>pg_xlog</filename> en dehors des répertoires de
       données, <application>rsync</application> doit être lancé
       aussi sur ces répertoires.
      </para>
     </step>

     <step>
      <title>Configurez les serveurs standby par réplication continue et par copie de fichiers</title>

      <para>
       Configurez les serveurs pour les copies des fichiers
       de transaction. (Vous n'avez pas besoin d'exécuter
       les fonctions <function>pg_start_backup()</function> et
       <function>pg_stop_backup()</function> ou effectuer une sauvegarde
       des fichiers car les esclaves sont toujours synchronisés avec
       le maître.)
      </para>
     </step>

    </substeps>

   </step>

   <step>
    <title>Restaurez <filename>pg_hba.conf</filename></title>

    <para>
     Si vous avez modifié <filanem>pg_hba.conf</filename>,
     restaurez cette configuration d'origine. Il peut être aussi
     nécessaire d'ajuster d'autres fichiers de configuration dans le
     nouveau cluster pour correspondre à l'ancien cluster, exemple
     <filename>postgresql.conf</filename>.
    </para>
   </step>

   <step>
    <title>Démarrez le nouveau serveur</title>

    <para>
     Le nouveau serveur peut maintenant être démarré en toute
     sécurité, puis les autres serveurs standby synchronisés avec
     <application>rsync</application>.
    </para>
   </step>

   <step>
    <title>Traitements après mise à jour</title>

    <para>
     Si des traitements après mise à jour sont nécessaires,
     pg_upgrade affichera des avertissements lors de son travail. Il
     générera également des scripts qui devront être lancés par
     l'administrateur. Les scripts se connecterons à chaque base de
     données qui ont besoin de traitements après mise à jour. Chaque
     script devrait être lancé comme suit:

<programlisting>
psql --username postgres --file script.sql postgres
</programlisting>

     Les scripts peuvvent être lancés dans n'importe quel ordre et
     détruits une fois terminés.
    </para>

    <caution>
    <para>
     Généralement il n'est pas sûr d'accèder des tables référencées
     dans les scripts de reconstruction avant la fin de leurs traitements;
     le faire pourrait entraîner des résultats incorrects ou de
     médiocres performances. Les tables non référencées dans les
     scripts de reconstruction peuvent être accédées immédiatement.
    </para>
    </caution>
   </step>

   <step>
    <title>Statistiques</title>

    <para>
     Parce que les statistiques de l'optimiseur ne sont pas tranférées
     par <command>pg_upgrade</command>, vous serez invités à lancer
     une commande pour regénérer cette information à la fin de la mise
     à jour. Vous pourriez avoir besoin de positionner les paramètres
     de connexion pour qu'ils correspondent à votre nouveau cluster.
    </para>
   </step>

   <step>
    <title>Détruire les anciens cluster</title>

    <para>
     Une fois que vous êtes satisfait de la mise à jour, vous pouvez
     détruire les répertoires de données des anciens clusters en
     lançant le script indiqué par <command>pg_upgrade</command>
     à la fin de son traitement. (La destruction automatique n'est
     pas possible si vous avez défini des tablespaces personnalisés
     dans l'ancien répertoire de données.) Vous pouvez également
     supprimer les anciens répertoires d'installation (exemple
     <filename>bin</filename>, <filename>share</filename>).
    </para>
   </step>

   <step id="pgupgrade-step-revert" performance="optional">
    <title>Revenir à l'ancien cluster</title>

    <para>
     Si, après avoir lancé <command>pg_upgrade</command>, vous désirez
     revenir à l'ancien cluster, il y a plusieurs options:

     <itemizedlist>
      <listitem>
       <para>
        Si vous avez lancé <command>pg_upgrade</command> avec l'option
        <option>--check</option>, aucune modification n'a été faite
        à l'ancien cluster et vous pouvez le réutiliser à tout moment.
       </para>
      </listitem>

      <listitem>
       <para>
        Si vous avez lancé <command>pg_upgrade</command> avec l'option
        <option>--link</option>, les fichiers de données sont partagés
        par l'ancien et le nouveau cluster. Si vous avez démarré le
        nouveau cluster, le nouveau serveur a écrit dans ces fichiers
        partagés et il n'est pas sûr d'utiliser l'ancien cluster.
       </para>
      </listitem>

      <listitem>
       <para>
        Si vous avez lancé <command>pg_upgrade</command>
        <emphasis>sans</emphasis> l'option <option>--link</option>
        ou n'avez pas encore démarré le nouveau serveur, l'ancien
        cluster n'a pas été modifié excepté, si la liaison a
        commencé, un suffixe <literal>.old</literal> a été ajouté
        à <filename>$PGDATA/global/pg_control</filename>. Pour
        réutiliser l'ancien cluster, supprimer l'éventuel
        suffixe <filename>.old</filename> du fichier
        <filename>$PGDATA/global/pg_control</filename>; vous pouvez
        alors redémarrer l'ancien cluster.
       </para>
      </listitem>
     </itemizedlist>
    </para>
   </step>
  </procedure>

 </refsect1>

 <refsect1>
  <title>Notes</title>

  <para>
   <application>pg_upgrade</application> ne supporte pas la mise à jour
   des bases de données contenant des types de données <type>reg*</type>
   suivant référençant des OIDs:
   <type>regproc</type>, <type>regprocedure</type>, <type>regoper</type>,
   <type>regoperator</type>, <type>regconfig</type>, et
   <type>regdictionary</type>.  (<type>regtype</type> peut être mis à jour.)
  </para>

  <para>
   Tous les échecs, reconstruction et réindexation seront
   reportés par <application>pg_upgrade</application> si ils
   affectent votre installation; les scripts d'après mise à
   jour pour reconstruire les tables et index seront générés
   automatiquement. Si vous essayez d'automatiser la mise à jour de
   plusieurs clusters, vous devriez constater que les clusters avec
   des schémas de bases de données identiques ont besoin des même
   étapes après mise à jour; car les étapes après mise à jour
   sont basées sur les schémas des bases de données, et pas sur
   les données utilisateurs.
  </para>

  <para>
   Pour les déploiements de tests, créez uniquement une copie du
   schéma de l'ancien cluster, insérez des données de tests, et faites
   la mise à jour.
  </para>

  <para>
   Si vous effectuez la mise à jour d'un cluster
   <productname>PostgreSQL</productname> avant la version 9.2 qui utilise
   un répertoire contenant uniquement un fichier de configuration,
   vous devez indiquer l'emplacement réel du répertoire de données
   à <application>pg_upgrade</application>, et indiquer l'emplacement
   du répertoire de configuration du serveur, exemple <literal>-d
   /real-data-directory -o '-D /configuration-directory'</literal>.
  </para>

  <para>
   Si vous utilisez un ancien serveur avec une version antérieure
   à la 9.1 qui utilise un répertoire de socket unix qui n'est pas
   celui par défaut ou un emplacement par défaut qui est différent
   de celui du nouveau cluster, positionnez <envar>PGHOST</envar>
   pour qu'il pointe sur la socket de l'ancien serveur. (Ceci n'est
   pas applicable sous Windows.)
  </para>

  <para>
   Si vous souhaitez utiliser le mode liaison et ne voulez pas que
   votre ancien cluster soit modifié lorsque le nouveau cluster est
   démarré, faites une copie de l'ancien cluster et faites la mise
   à jour à partir de cette copie. Pour faire une copie valide de
   l'ancien cluster, utilisez <command>rsync</command> pour effectuer une
   copie grossière de l'ancien cluster lancé, puis arrêtez l'ancien
   serveur et lancez <command>rsync --checksum</command> à nouveau
   pour mettre à jour la copie dans un état cohérent avec tous les
   changements. (L'option <option>--checksum</option> est nécessaire
   car <command>rsync</command> n'a une granularité sur les dates de
   modification de fichiers que d'une seconde.) Vous pourriez souhaiter
   exclure certains fichiers, exemple <filename>postmaster.pid</filename>,
   comme documenté à <xref linkend="backup-lowlevel-base-backup"/>. Si
   votre système de fichiers supporte les images de système de fichiers
   ou les copies sur écritures de fichiers, vous pouvez utiliser ces
   fonctionnalités pour faire une sauvegarde de l'ancien cluster et
   des tablespaces, bien que l'image et les copies doivent être créés
   simultanément ou lorsque le serveur de bases de données est éteint.
  </para>

 </refsect1>

 <refsect1>
  <title>See Also</title>

  <simplelist type="inline">
   <member><xref linkend="app-initdb"/></member>
   <member><xref linkend="app-pg-ctl"/></member>
   <member><xref linkend="app-pgdump"/></member>
   <member><xref linkend="app-postgres"/></member>
  </simplelist>
 </refsect1>
</refentry>
